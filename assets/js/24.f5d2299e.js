(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{197:function(e,t,v){"use strict";v.r(t);var s=v(0),n=Object(s.a)({},(function(){var e=this.$createElement;this._self._c;return this._m(0)}),[function(){var e=this,t=e.$createElement,v=e._self._c||t;return v("div",{staticClass:"content"},[v("h1",{attrs:{id:"mvvm模式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#mvvm模式"}},[e._v("#")]),e._v(" MVVM模式")]),e._v(" "),v("p",[e._v("MVVM模式，"),v("code",[e._v("M")]),e._v("即 model，数据模型；"),v("code",[e._v("V")]),e._v("即 view，视图；"),v("code",[e._v("VM")]),e._v("即 view-model，视图模型。 "),v("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/xugaoyi/image_store/blog/20200204123438.png",alt:"img"}})]),e._v(" "),v("p",[v("strong",[e._v("理解")])]),e._v(" "),v("p",[e._v("首先，数据Model通过Data Bindings把数据绑定在View视图上，")]),e._v(" "),v("p",[e._v("当View视图有交互（有改变）的时候，Dom listeners会自动监听，然后更新数据Model。")]),e._v(" "),v("p",[v("strong",[e._v("Q：什么是MVVM模式？")])]),e._v(" "),v("p",[e._v("A：MVVM模式，第一个M代表数据模型，V代表视图，VM代表视图模型； 它的实际操作原理是：后台数据通过视图模型来渲染视图，就是页面。当用户在页面上进行操作的时候， 视图模型会自动监听到用户的操作，从而改变后台数据。")])])}],!1,null,null,null);t.default=n.exports}}]);